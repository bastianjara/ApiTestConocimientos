//------------------------------------------------------------------------------
// <auto-generated>
//    Este código se generó a partir de una plantilla.
//
//    Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//    Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Test_de_conocimientos.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class agilesoftEntities : DbContext
    {
        public agilesoftEntities()
            : base("name=agilesoftEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<string> pa_inserta_usuario(string username_usuario, string password_usuario, string nombre_usuario)
        {
            var username_usuarioParameter = username_usuario != null ?
                new ObjectParameter("username_usuario", username_usuario) :
                new ObjectParameter("username_usuario", typeof(string));
    
            var password_usuarioParameter = password_usuario != null ?
                new ObjectParameter("password_usuario", password_usuario) :
                new ObjectParameter("password_usuario", typeof(string));
    
            var nombre_usuarioParameter = nombre_usuario != null ?
                new ObjectParameter("nombre_usuario", nombre_usuario) :
                new ObjectParameter("nombre_usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("pa_inserta_usuario", username_usuarioParameter, password_usuarioParameter, nombre_usuarioParameter);
        }
    
        public virtual ObjectResult<pa_iniciar_sesion_Result> pa_iniciar_sesion(string username_usuario, string password_usuario)
        {
            var username_usuarioParameter = username_usuario != null ?
                new ObjectParameter("username_usuario", username_usuario) :
                new ObjectParameter("username_usuario", typeof(string));
    
            var password_usuarioParameter = password_usuario != null ?
                new ObjectParameter("password_usuario", password_usuario) :
                new ObjectParameter("password_usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pa_iniciar_sesion_Result>("pa_iniciar_sesion", username_usuarioParameter, password_usuarioParameter);
        }
    
        public virtual ObjectResult<sp_lista_tareas_Result> sp_lista_tareas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_lista_tareas_Result>("sp_lista_tareas");
        }
    
        public virtual ObjectResult<string> sp_inserta_tarea(string nombre_tarea, string estado_tarea, string descripcion_tarea)
        {
            var nombre_tareaParameter = nombre_tarea != null ?
                new ObjectParameter("nombre_tarea", nombre_tarea) :
                new ObjectParameter("nombre_tarea", typeof(string));
    
            var estado_tareaParameter = estado_tarea != null ?
                new ObjectParameter("estado_tarea", estado_tarea) :
                new ObjectParameter("estado_tarea", typeof(string));
    
            var descripcion_tareaParameter = descripcion_tarea != null ?
                new ObjectParameter("descripcion_tarea", descripcion_tarea) :
                new ObjectParameter("descripcion_tarea", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_inserta_tarea", nombre_tareaParameter, estado_tareaParameter, descripcion_tareaParameter);
        }
    
        public virtual ObjectResult<string> sp_actualiza_tarea(Nullable<int> id_tarea)
        {
            var id_tareaParameter = id_tarea.HasValue ?
                new ObjectParameter("id_tarea", id_tarea) :
                new ObjectParameter("id_tarea", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_actualiza_tarea", id_tareaParameter);
        }
    }
}
